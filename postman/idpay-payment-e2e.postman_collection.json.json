{
	"info": {
		"_postman_id": "a698508e-f098-4e2f-92a4-50e2b83fb5e9",
		"name": "IDPay Payment - e2e Create Transaction",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "21434036"
	},
	"item": [
		{
			"name": "Happy case",
			"item": [
				{
					"name": "Generate Token IO",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Retrieve Token', () => {\r",
									"    //verify response HTTP status \r",
									"    pm.response.to.have.status(200);\r",
									"    pm.collectionVariables.set(\"tokenIO\", pm.response.text());\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Ocp-Apim-Subscription-Key",
								"value": "",
								"type": "default"
							},
							{
								"key": "Ocp-Apim-Trace",
								"value": "{{Ocp-Apim-Trace}}",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/bpd/pagopa/api/v1/login?fiscalCode={{fiscalCode}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bpd",
								"pagopa",
								"api",
								"v1",
								"login"
							],
							"query": [
								{
									"key": "fiscalCode",
									"value": "{{fiscalCode}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "[ACQUIRER] Create Transaction",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"[ACQUIRER] Create transaction [QR-CODE]\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.collectionVariables.set(\"trxCode\", pm.response.json().trxCode);\r",
									"pm.collectionVariables.set(\"transactionId\", pm.response.json().id);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let moment = require('moment');\r",
									"let today = String(moment().format('YYYY-MM-DDTHH:mm:ss.SSSZ'));\r",
									"\r",
									"pm.collectionVariables.set(\"trxDate\", today);\r",
									"\r",
									"pm.collectionVariables.set(\"randomNum\", Math.floor(Math.random() * 1000))\r",
									"pm.collectionVariables.set(\"x-merchant-id\",`MERCHANTID{{randomNum}}`);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{apimSubscriptionKeyAcquirer}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "Ocp-Apim-Subscription-Key",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Ocp-Apim-Trace",
								"value": "true",
								"type": "text"
							},
							{
								"key": "x-merchant-id",
								"value": "{{x-merchant-id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"initiativeId\" : \"{{initiativeId}}\",\r\n    \"merchantFiscalCode\" : \"MERCHANTFISCALCODE{{randomNum}}\",\r\n    \"vat\" : \"VAT{{randomNum}}\",\r\n    \"idTrxIssuer\": \"IDTRXISSUER{{randomNum}}\",\r\n    \"trxDate\": \"{{trxDate}}\",\r\n    \"amountCents\": \"2000\",\r\n    \"mcc\" : \"MCC{{randomNum}}\",\r\n    \"callbackUrl\" : \"CALLBARCKURL{{randomNum}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/idpay/payment/qr-code/merchant/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"idpay",
								"payment",
								"qr-code",
								"merchant",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Unhappy case",
			"item": [
				{
					"name": "QRCode Create transaction",
					"item": [
						{
							"name": "Initiative not found - 404",
							"item": [
								{
									"name": "[ACQUIRER] Create Transaction - Initiative not found (404)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Unhappy case: Create transaction for initiative not found - Response status is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"let moment = require('moment');\r",
													"let today = String(moment().format('YYYY-MM-DDTHH:mm:ss.SSSZ'));\r",
													"\r",
													"pm.collectionVariables.set(\"trxDate\", today);\r",
													"\r",
													"pm.collectionVariables.set(\"randomNum\", Math.floor(Math.random() * 1000))\r",
													"pm.collectionVariables.set(\"x-merchant-id\",`MERCHANTID{{randomNum}}`);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "value",
													"value": "{{apimSubscriptionKeyAcquirer}}",
													"type": "string"
												},
												{
													"key": "key",
													"value": "Ocp-Apim-Subscription-Key",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "text"
											},
											{
												"key": "x-merchant-id",
												"value": "{{x-merchant-id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"initiativeId\" : \"DUMMYINITIATIVE\",\r\n    \"merchantFiscalCode\" : \"MERCHANTFISCALCODE{{randomNum}}\",\r\n    \"vat\" : \"VAT{{randomNum}}\",\r\n    \"idTrxIssuer\": \"IDTRXISSUER{{randomNum}}\",\r\n    \"trxDate\": \"{{trxDate}}\",\r\n    \"amountCents\": \"2000\",\r\n    \"mcc\" : \"MCC{{randomNum}}\",\r\n    \"callbackUrl\" : \"CALLBARCKURL{{randomNum}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/idpay/payment/qr-code/merchant/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"idpay",
												"payment",
												"qr-code",
												"merchant",
												""
											]
										}
									},
									"response": []
								}
							]
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "trxCode",
			"value": ""
		},
		{
			"key": "transactionId",
			"value": ""
		},
		{
			"key": "initiativeId",
			"value": "64133e6d2e116722291c1dcc",
			"type": "string"
		},
		{
			"key": "trxDate",
			"value": "",
			"type": "string"
		},
		{
			"key": "tokenIO",
			"value": ""
		},
		{
			"key": "merchantId",
			"value": ""
		},
		{
			"key": "acquirerId",
			"value": ""
		},
		{
			"key": "merchartId",
			"value": ""
		},
		{
			"key": "randomNum",
			"value": ""
		},
		{
			"key": "x-merchart-id",
			"value": ""
		},
		{
			"key": "x-acquirer-id",
			"value": ""
		},
		{
			"key": "x-merchant-id",
			"value": ""
		}
	]
}