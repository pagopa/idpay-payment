microservice-chart:
  namespace: "idpay"
  nameOverride: ""
  fullnameOverride: ""

  livenessProbe:
    httpGet:
      path: /actuator/health
      port: 8080
    initialDelaySeconds: 120
    failureThreshold: 15
    periodSeconds: 10

  readinessProbe:
    httpGet:
      path: /actuator/health
      port: 8080
    initialDelaySeconds: 120
    failureThreshold: 15
    periodSeconds: 10

  deployment:
    create: true

  service:
    create: true
    type: ClusterIP
    port: 8080

  ingress:
    create: true
    path: /idpaypayment/(.*)
    rewriteTarget: /$1

  serviceAccount:
    create: false
    annotations: {}
    name: ""

  podAnnotations: {}

  podSecurityContext:
    seccompProfile:
      type: RuntimeDefault

  securityContext:
    allowPrivilegeEscalation: false

  envConfig:
    MONGODB_DBNAME: idpay
    APPLICATIONINSIGHTS_ROLE_NAME: "idpaypayment"
    APPLICATIONINSIGHTS_INSTRUMENTATION_LOGGING_LEVEL: "OFF"
    APPLICATIONINSIGHTS_INSTRUMENTATION_MICROMETER_ENABLED: "false"
    APPLICATIONINSIGHTS_PREVIEW_PROFILER_ENABLED: "false"
    ENABLE_AUDIT_APPENDER: "TRUE"

  externalConfigMapValues:
    create: true
    configMaps:
      - name: idpay-common
        key: TZ

      - name: rest-client
        key: idpay-reward-calculator-baseurl
      - name: rest-client
        key: idpay_merchant_host

      - name: idpay-eventhub-01
        key: kafka_broker
      - name: idpay-eventhub-01
        key: idpay_error_topic
      - name: idpay-eventhub-01
        key: idpay_transaction_topic

  envSecret:
    MONGODB_URI: mongodb-connection-string
    KAFKA_ERRORS_SASL_JAAS_CONFIG: evh-idpay-errors-idpay-errors-producer-jaas-config-idpay-01
    KAFKA_TRANSACTION_OUTCOME_SASL_JAAS_CONFIG: evh-idpay-transaction-idpay-transaction-producer-jaas-config-idpay-01

  # nodeSelector: {}

  # tolerations: []

  # affinity: {}

  externalConfigMapFiles:
    create: true
    configMaps:
      - name: appinsights-config
        key: applicationinsights.json
